/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/led/led.h>

#define DEFAULT 0-base
#define LOWER   1-symbol
#define RAISE   2-numpad
#define ADJUST  3-misc-rgb-bt
#define GAMING  4-gaming
#define EXTRA   5-extra

&spi1 {
	compatible = "nordic,nrf-spim";
	status = "okay";
	mosi-pin = <6>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <5>;
	miso-pin = <7>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <11>; /* arbitrary; change at will */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
		color-mapping = <LED_COLOR_ID_GREEN
							LED_COLOR_ID_RED
							LED_COLOR_ID_BLUE>;
						
	};
};

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};

&encoder_1 {
    status = "okay";
};

/ {
    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1>;
    };
};




/ {
        keymap {
                compatible = "zmk,keymap";
				



                  0-base_layer {
// -------------------------------------------------------------------------------------
// | LT(1) ESC   |  Q  |  W  |  E  |  R  |  T  |                 |  Y  |      U     |  I  |  O  |  P  |  LT(1) -  |
// | LT(2) TAB   |  A  |  S  |  D  |  LT(1)F  |  G  |                 |  H  |  LT(1) J   |  K  |  L  |  ;  |     '     |
// | LCTRL(LPAR) |  Z  |  X  |  C  |  V  |BSPC |                 |  B  |      N     |  M  |  ,  |  .  |     /     |
//                           | ALT | LSHFT(ESC)|    LT (3) SPC   |  LT (1) ENT  | GUI(CAPSLOCK) |
                        bindings = <
   &lt 1 ESC      &kp Q &kp W &kp E &kp R &kp T             &kp Y &kp U    &kp I     &kp O     &kp P     &lt 1 MINUS
   &lt 2 TAB      &kp A &kp S &kp D &lt 1 F &kp G             &kp H &lt 1 J  &kp K     &kp L     &kp SEMI  &kp SQT
   &mt LCTRL LPAR &kp Z &kp X &kp C &lt 2 V &kp BSPC          &kp B &kp N    &kp M     &kp COMMA &kp DOT   &kp FSLH
                        &kp LALT  &mt LSHIFT ESC   &lt 3 SPACE  &lt 1 RET  &mt LGUI CAPS
                        >;
            sensor-bindings = <&inc_dec_kp LS(F12) LS(F11)>;

                };

                1-symbol_layer {
// ----------------------------------------------------------------------------------
// | ~  |  !  |  @  |  #  |  $  |  %  |       |  ^  |  &  |  *  |  (  |  )  |  \  |
// |    |     |     |  )  |     |  )  |       | )   |  {  |  }  |  [  |  ]  |  |  |
// |    |     |     |     |     | B |       | pgup| pgdn| Home| End | c(←)| c(→)|
//              |  HOME  | NumpadENT  |CHINESE|   |   END  |
                        bindings = <
   &kp GRAVE &kp EXCL  &kp AT      &kp HASH     &kp DLLR  &kp PRCNT     &kp CARET &kp AMPS  &kp ASTERISK  &kp LPAR           &kp RPAR             &kp BACKSLASH
   &trans    &trans   &trans      &kp RPAR       &trans    &kp RPAR        &kp RPAR  &kp LBRC  &kp RBRC      &kp LEFT_BRACKET   &kp RIGHT_BRACKET    &kp PIPE    
   &trans    &trans    &trans      &trans       &trans    &kp B       &kp PG_UP &kp PG_DN &kp HOME      &kp END            &kp LC(LEFT_ARROW)   &kp LC(RIGHT_ARROW)
                              &kp HOME          &kp KP_ENTER      &kp LA(LSHIFT)    &kp LC(RIGHT_ARROW)       &kp END
                        >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;

                };

                2-numpad_layer {
// -----------------------------------------------------------------------------------------
// |CALC|        |  G(UP)  |     1   |   2  | 3|         | 7  | 8  |  9 |  =  |  *  | - |
// |    | G(LEFT)| G(DOWN) |G(RIGHT)| TO(4) |    NUMLOCK    |         | 4  | 5  | 6  | Vup | Vdn | + |
// |    |        |         |        |     |      BSPC     |         | 1  | 2  | 3  | Vpv | . | / |
//                              | ESC | BSPC  | EQUAL | 0   |  .   |
                        bindings = <
   &kp C_AL_CALCULATOR  &trans       &kp LG(UP)    &kp N1   &kp N2    &kp N3        	 	 &kp N7   &kp N8    &kp N9    &kp EQUAL      &kp KP_MULTIPLY    &kp KP_MINUS
   &trans               &kp LG(LEFT) &kp LG(DOWN)  &kp LG(RIGHT)  &to 4  &kp KP_NUM        &kp N4   &kp N5    &kp N6    &kp C_VOL_UP   &kp C_VOL_DN       &kp KP_PLUS
   &trans               &trans       &trans        &trans         &trans  &kp BSPC      	 &kp N1   &kp N2    &kp N3    &kp C_PREVIOUS &kp KP_DOT         &kp KP_DIVIDE
                                &kp ESC      &kp BSPC      &kp  EQUAL        &kp N0      &kp KP_DOT
                        >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;

                };

                3-misc-rgb-bt_layer {
// -----------------------------------------------------------------------------------------
// | RGB TOG  |  1  |  C(W)  | C(E)  |  UP     |   C(T)         |   |      HOME  |    END |    *         |   [    |    ]   |     |    |
// | RGB ANI+ |  C(A)  |  C(S)  | LEFT |  DOWN  |  RIGHT |   | S(F9) |  UP    |  S(F10) |   BT1  |  BT2   |    BT3   |
// | MO(5) |  C(Z)  |  C(X)  |    C(C)    |  C(V)  |     C(B)    |   |    LEFT    |  DOWN  |     RIGHT    | BT4    |  BT5   |  BT CLR  |
//                                              |    0    |              |   |        |     |
                        bindings = <
   &rgb_ug RGB_TOG        &rgb_ug RGB_EFR   &kp LC(W)  &kp LC(E)               &kp UP    &kp LC(T)                        &kp HOME             &kp END   &kp ASTERISK            &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp PIPE2 
   &rgb_ug RGB_EFF        &kp LC(A)   &kp LC(S)  &kp LEFT   &kp DOWN    &kp RIGHT           &kp LS(F9)   &kp UP    &kp LS(F10)     &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2
   &mo 5        &kp LC(Z)   &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(B)                     &kp LEFT             &kp DOWN  &kp RIGHT               &bt BT_SEL 3     &bt BT_SEL 4      &bt BT_CLR
                                                                     &kp N0      &trans       &none      &trans      &trans
                        >;
            sensor-bindings = <&inc_dec_kp LS(F8) LS(F7)>;

                };
                
                      4-gaming_layer {
// -------------------------------------------------------------------------------------
// | ESC   |  Q  |  W  |  E  |  R  |  T  |                 |  Y  |      U     |  I  |  O  |  P  | To LAYER 0  |
// | TAB   |  A  |  S  |  D  |  F  |  G  |                 |  H  |    lt(1)J  |  K  |  L  |  ;  |  shift  |
// | LCTRL |  Z  |  X  |  C  |  V  |BSPC |                 |  B  |      N     |  M  |  ,  |  .  | / |
//                           | ALT |  SPC |  LEFT ARROW  |  ENT  | GUI(CAPSLOCK) |
                        bindings = <
   &kp ESC      &kp Q &kp W &kp E &kp R &kp T             &kp Y &kp U    &kp I     &kp O     &kp P     &to 0
   &kp TAB      &kp A &kp S &kp D &kp F &kp G             &kp H &lt 1 J  &kp K     &kp L     &kp SEMI  &kp LSHIFT
   &kp LCTRL    &kp Z &kp X &kp C &kp V &kp BSPC          &kp B &kp N    &kp M     &kp COMMA &kp DOT  &kp FSLH
                        &kp LALT  &kp SPACE  &kp LEFT  &kp RET  &mt LGUI CAPS       
                
                        >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;

                };

                5-extra_layer {
// -----------------------------------------------------------------------------------------
// |CALC|        |  G(UP)  |   1   |   2   |   3   |         | 7  | 8  |  9 |  =  |  *  | - |
// |    | G(LEFT)| G(DOWN) |   4   |   5   |   6   |         | 4  | 5  | 6  | Vup | Vdn | + |
// |    |        |         |   7   |   8   |   9   |         | 1  | 2  | 3  | Vpv | Vnx | / |
//                              | 0 | . | EQUAL | 0   |  .   |
                        bindings = <
   &kp C_AL_CALCULATOR  &trans       &kp N1   &kp N2    &kp N3    &kp N3        	 	 &kp N7   &kp N8    &kp N9    &kp EQUAL      &kp KP_MULTIPLY    &kp KP_MINUS
   &trans               &kp LG(LEFT) &kp N4   &kp N5    &kp N6    &kp N6        &kp N4   &kp N5    &kp N6    &kp C_VOL_UP   &kp C_VOL_DN       &kp KP_PLUS
   &trans               &trans       &kp N7   &kp N8    &kp N9    &kp N9      	 &kp N1   &kp N2    &kp N3    &kp C_PREVIOUS &kp C_NEXT         &kp KP_DIVIDE
                                &kp N0      &kp KP_DOT      &kp  EQUAL        &kp N0      &kp KP_DOT
                        >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;

                };
            
                
                
             

        };
};
